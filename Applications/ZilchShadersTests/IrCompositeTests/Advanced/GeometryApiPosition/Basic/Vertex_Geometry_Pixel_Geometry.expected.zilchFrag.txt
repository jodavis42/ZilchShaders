struct Vertex_Geometry_Pixel_GeoIn
{
  [StageInput(name : "PerspectivePosition")] var Stage_PerspectivePosition_Real4 : Real4;
  [StageInput(name : "Uv")] var Stage_Uv_Real2 : Real2;
  [StageInput(name : "Color")] var Stage_Color_Real4 : Real4;
  [StageInput(name : "Time")] var Stage_Time_Real : Real;
  [HardwareBuiltInInput] var ApiPerspectivePosition : Real4;
}
struct Vertex_Geometry_Pixel_GeoOut
{
  [StageOutput(name : "Uv")] var Stage_Uv_Real2 : Real2;
  [StageOutput(name : "Color")] var Stage_Color_Real4 : Real4;
  [StageOutput(name : "Time")] var Stage_Time_Real : Real;
  [HardwareBuiltInOutput] var ApiPerspectivePosition : Real4;
}
[Geometry(maxVertices : 3)][UnitTest]
struct Vertex_Geometry_Pixel_Geometry
{
  [AppBuiltInInput] var PerspectiveToApiPerspective : Real4x4;
  [EntryPoint]
  function Main(input : TriangleInput[Vertex_Geometry_Pixel_GeoIn], output : TriangleOutput[Vertex_Geometry_Pixel_GeoOut])
  {
    var fragmentInput = TriangleInput[GeometryData]();
    for(var i = 0; i < 3; ++i)
    {
      fragmentInput[i].PerspectivePosition = input[i].Stage_PerspectivePosition_Real4;
    }
    var fragmentOutput = TriangleOutput[GeometryData]();
    var geometry = Geometry();
    geometry.Main(fragmentInput, fragmentOutput);
  }
}
