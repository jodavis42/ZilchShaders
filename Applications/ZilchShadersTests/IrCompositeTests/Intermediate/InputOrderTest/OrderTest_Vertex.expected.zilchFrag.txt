[Vertex][UnitTest]
struct OrderTest_Vertex
{
  [StageInput(name : "Uv")][StageOutput(name : "Uv")] var Stage_Uv_Real2 : Real2;
  [StageInput(name : "LocalPosition")][StageOutput(name : "LocalPosition")] var Stage_LocalPosition_Real3 : Real3;
  [StageOutput(name : "Property3")] var Stage_Property3_Real : Real;
  [StageOutput(name : "VertexId")] var Stage_VertexId_Integer : Integer;
  [StageOutput(name : "NearPlane")] var Stage_NearPlane_Real : Real;
  [PropertyInput] var Property1_Vertex1 : Real;
  [PropertyInput] var Property2_Vertex1 : Real;
  [PropertyInput] var Property3_Vertex1 : Real;
  [HardwareBuiltInInput] var VertexId : Integer;
  [HardwareBuiltInInput] var InstanceId : Integer;
  [AppBuiltInInput] var LogicTime : Real;
  [AppBuiltInInput] var FrameTime : Real;
  [AppBuiltInInput] var NearPlane : Real;
  [PropertyInput] var Property2_Vertex2 : Real;

  [EntryPoint]
  function Main()
  {
    var vertex1 = Vertex1();
    vertex1.Property1 = this.Property1_Vertex1;
    vertex1.Property2 = this.Property2_Vertex1;
    vertex1.Property3 = this.Property3_Vertex1;
    vertex1.VertexId = this.VertexId;
    vertex1.InstanceId = this.InstanceId;
    vertex1.Uv = this.Stage_Uv_Real2;
    vertex1.LocalPosition = this.Stage_LocalPosition_Real3;
    vertex1.LogicTime = this.LogicTime;
    vertex1.FrameTime = this.FrameTime;
    vertex1.NearPlane = this.NearPlane;
    vertex1.Main();

    var vertex2 = Vertex2();
    vertex2.Property1 = vertex1.Property1;
    vertex2.Property2 = this.Property2_Vertex2;
    vertex2.VertexId = vertex1.VertexId;
    vertex2.InstanceId = this.InstanceId;
    vertex2.Uv = vertex1.Uv;
    vertex2.LocalPosition = this.Stage_LocalPosition_Real3;
    vertex2.LogicTime = vertex1.LogicTime;
    vertex2.FrameTime = this.FrameTime;
    vertex2.Main();

    this.Stage_Uv_Real2 = vertex1.Uv;
    this.Stage_LocalPosition_Real3 = vertex1.LocalPosition;
    this.Stage_Property3_Real = vertex1.Property3;
    this.Stage_VertexId_Integer = vertex1.VertexId;
    this.Stage_NearPlane_Real = vertex1.NearPlane;
  }
}
