[Pixel][UnitTest]
struct WhileLoops
{
  function While0() : Integer
  {
    var a = 1;
    while(a < 0)
     --a;
    return a;
  }
  
  function While0Break() : Integer
  {
    var a = 1;
    while(a < 0)
    {
      break;
    }
    return a;
  }
  
  function While0Continue() : Integer
  {
    var a = 1;
    while(a < 0)
    {
      continue;
    }
    return a;
  }
  
  function WhileIf0() : Integer
  {
    var a = 1;
    while(a < 0)
    {
      if(a > 0)
        continue;
      --a;
    }
    return a;
  }
  
  function WhileIf1() : Integer
  {
    var a = 1;
    while(a < 0)
    {
      if(a > 0)
        break;
      --a;
    }
    return a;
  }
  
  function WhileIf2() : Integer
  {
    var a = 1;
    while(a < 0)
    {
      if(a > 0)
        continue;
      else if(a < 0)
        break;
      else
        a = 0;
      --a;
    }
    return a;
  }
  
  function NestedWhile0() : Integer
  {
    var a = 1;
    while(a > 0)
    {
      var b = 1;
      while(b > 0)
        --b;
      --a;
    }
    return a;
  }
  
  function NestedWhile1() : Integer
  {
    var a = 1;
    while(a > 0)
    {
      var b = 1;
      while(b > 0)
        continue;
      --a;
    }
    return a;
  }
  
  function NestedWhile2() : Integer
  {
    var a = 1;
    while(a > 0)
    {
      var b = 1;
      while(b > 0)
        break;
      --a;
    }
    return a;
  }
  
  function NestedWhile3() : Integer
  {
    var a = 1;
    while(a > 0)
    {
      var b = 1;
      while(b > 0)
        break;
      break;
    }
    return a;
  }
  
  /*function While2() : Integer
  {
    var a = 1;
    while(a < 0)
    {
      var b = 1;
      while(b != 0)
      {
        if((b / 2) == 0)
        {
          --b;
          continue;
        }
        b = -2;
        break;
      }
      
      if(b < 0)
        break;
    }
    return a;
  }*/
  
  [EntryPoint]
  function Main()
  {
    this.While0();
    this.While0Break();
    this.While0Continue();
    this.WhileIf0();
    this.WhileIf1();
    this.WhileIf2();
    this.NestedWhile0();
    this.NestedWhile1();
    this.NestedWhile2();
    this.NestedWhile3();
  }
}
