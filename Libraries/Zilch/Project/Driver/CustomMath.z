class CustomMath
{
  [Static]
  function Factorial(n : Integer) : Integer
  {
    if (n <= 1)
    {
      return 1;
    }

    return CustomMath.Factorial(n : n - 1) * n;
  }
  
  // Evaluate the *fibonnaci* sequence for a given n
  // Really stupid recursive implementation!
  [Static]
  function Fib(n : Integer) : Integer
  {
    if (n <= 1)
    {
      return n;
    }

    return CustomMath.Fib(n : n - 1) + CustomMath.Fib(n : n - 2);
  }
  
  [Static]
  function Sign(input : Real) : Integer
  {
    if (input > 0.0)
    {
      return +1;
    }
    else if (input < -0.0)
    {
      return -1;
    }

    return 0;
  }
  
  [Static]
  function Sign(input : Integer) : Integer
  {
    if (input > 0)
    {
      return +1;
    }
    else if (input < 0)
    {
      return -1;
    }

    return 0;
  }
  
  [Static]
  function Double(n :Integer) : Integer
  {
    return n * 2;
  }
  
  [Static]
  function Triple(n :Integer) : Integer
  {
    return n * 3;
  }
}
