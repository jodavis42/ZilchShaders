<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>zilch</string>
	</array>
	<key>foldingStartMarker</key>
	<string>(/\*\*|\{\s*$)</string>
	<key>foldingStopMarker</key>
	<string>(\*\*/|^\s*\})</string>
	<key>keyEquivalent</key>
	<string>^~A</string>
	<key>name</key>
	<string>Zilch</string>
	<key>patterns</key>
	<array>

		<dict>
			<key>match</key>
			<string>\b(this|value)\b</string>
			<key>name</key>
			<string>keyword.control.zilch</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(any|and|as|base|break|constructor|continue|debug|delegate|delete|destructor|do|else|enum|flags|for|foreach|get|if|loop|new|not|or|ref|return|sends|set|struct|throw|typeid|typeof|var|while)\b</string>
			<key>name</key>
			<string>keyword.control.zilch</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(abstract|alias|alignof|assert|auto|case|catch|checked|const|default|dynamic|explicit|export|extern|finally|fixed|friend|global|goto|immutable|implicit|import|in|include|inline|interface|internal|is|local|lock|module|mutable|namespace|operator|out|override|package|params|partial|positional|private|protected|public|readonly|register|require|scope|sealed|signed|sizeof|stackalloc|static|switch|timeout|try|typedef|typename|unchecked|unsafe|unsigned|using|virtual|volatile|where|yield)\b</string>
			<key>name</key>
			<string>keyword.control.zilch</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(null|true|false)\b</string>
			<key>name</key>
			<string>constant.language.zilch</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f)?\b</string>
			<key>name</key>
			<string>constant.numeric.zilch</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.zilch</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.zilch</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.zilch</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.zilch</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.zilch</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.zilch</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.zilch</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.zilch</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.zilch</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.zilch</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.zilch</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(//).*$\n?</string>
			<key>name</key>
			<string>comment.line.double-slash.zilch</string>
		</dict>
		<dict>
			<key>match</key>
			<string>[-!%&amp;*+=/?:]</string>
			<key>name</key>
			<string>keyword.operator.symbolic.zilch</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.preprocessor.zilch</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[ \t]*(#)[a-zA-Z]+</string>
			<key>name</key>
			<string>meta.preprocessor.zilch</string>
		</dict>




		<dict>
			<key>match</key>
			<string>\b(function)\s+([a-zA-Z_]\w*)\s*</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.zilch</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.zilch</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.zilch</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.zilch</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>[^,)\n]+</string>
					<key>name</key>
					<string>variable.parameter.function.zilch</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.zilch</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.zilch</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.extends.zilch</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.other.inherited-class.zilch</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(class)\s+([a-zA-Z_](?:\w|\.)*)(?:\s+(extends)\s+([a-zA-Z_](?:\w|\.)*))?</string>
			<key>name</key>
			<string>meta.class.zilch</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.zilch</string>
	<key>uuid</key>
	<string>E5A6EC91-6EE4-11D9-BAB4-000D93589AF6</string>
</dict>
</plist>
